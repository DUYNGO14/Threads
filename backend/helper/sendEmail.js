import transporter from "../config/nodemailer.js";
import {
  PASSWORD_RESET_REQUEST_TEMPLATE,
  VERIFICATION_EMAIL_TEMPLATE,
} from "./emailTemplates.js";

const sendVerificationEmail = async (email, verificationOTP) => {
  try {
    // Log OTP ƒë·ªÉ debug
    console.log(`üîπ Sending OTP ${verificationOTP} to ${email}`);

    // Ki·ªÉm tra n·∫øu email ho·∫∑c OTP b·ªã thi·∫øu
    if (!email || !verificationOTP) {
      throw new Error("Missing email or OTP");
    }

    // Thay th·∫ø m√£ OTP v√†o template
    const verificationEmail = VERIFICATION_EMAIL_TEMPLATE.replace(
      "{verificationOtp}",
      verificationOTP
    );

    // G·ª≠i email qua transporter (Mailtrap / SMTP)
    const info = await transporter.sendMail({
      from: '"Website Threads" <no-reply@yourdomain.com>', // ƒê·ªãa ch·ªâ email h·ª£p l·ªá
      to: email,
      subject: "üîí Verify Your Email",
      html: verificationEmail,
    });

    console.log("‚úÖ Email sent successfully!", info.messageId);
    return info;
  } catch (error) {
    console.error("‚ùå Error sending verification email:", error.message);
    throw error;
  }
};

const sendPasswordResetEmail = async (email, resetURL) => {
  try {
    // Debug resetURL tr∆∞·ªõc khi g·ª≠i
    console.log(`üîπ Sending password reset email to: ${email}`);
    console.log(`üîπ Reset URL: ${resetURL}`);

    // Ki·ªÉm tra n·∫øu email ho·∫∑c resetURL b·ªã thi·∫øu
    if (!email || !resetURL) {
      throw new Error("Missing email or reset URL");
    }

    // Thay th·∫ø resetURL v√†o template
    const passwordResetEmail = PASSWORD_RESET_REQUEST_TEMPLATE.replace(
      "{resetURL}",
      resetURL
    );

    // G·ª≠i email qua transporter
    const info = await transporter.sendMail({
      from: '"Website Threads" <no-reply@yourdomain.com>', // ƒê·ªïi th√†nh email h·ª£p l·ªá
      to: email,
      subject: "üîë Password Reset Request",
      html: passwordResetEmail,
    });

    console.log("‚úÖ Password reset email sent successfully!", info.messageId);
    return info;
  } catch (error) {
    console.error("‚ùå Error sending password reset email:", error.message);
    throw error;
  }
};

export { sendVerificationEmail, sendPasswordResetEmail };
